test:
  workers:
    type: local
    number: 5
  rounds:
    - label: Create a car.
      # 5000 transactions should create around 1000 cars per worker but not guaranteed
      # so need to set asset limits to less than 1000 for the other tests
      txNumber: 10000
      rateControl:
          type: linear-rate
          opts:
            startingTps: 100
            finishingTps: 100
      workload:
        module: benchmarks/samples/fabric/fabcar/createCar.js
    - label: Change car owner.
      txNumber: 1000
      rateControl:
          type: linear-rate
          opts:
            startingTps: 100
            finishingTps: 100
      workload:
        module: benchmarks/samples/fabric/fabcar/changeCarOwner.js
        arguments:
          assets: 500
monitors:
    resource:
    - module: docker
      options:
        interval: 4
        containers: ['all']
    - module: prometheus
      options:
        url: "http://localhost:9090"
        metrics:
          include: [dev-.*, couch, peer, orderer]
          queries:
          - name: Max Memory (MB)
            query: sum(container_memory_rss{name=~".+"}) by (name)
            step: 10
            label: name
            statistic: max
            multiplier: 0.000001