test:
  workers:
    type: local
    number: 5
  rounds:
    - label: Create a car.
      # 5000 transactions should create around 1000 cars per worker but not guaranteed
      # so need to set asset limits to less than 1000 for the other tests
      txNumber: 15000
      rateControl:
          type: linear-rate
          opts:
            startingTps: 60
            finishingTps: 60
      workload:
        module: benchmarks/samples/fabric/fabcar/createCar.js
    - label: Change car owner.
      txNumber: 15000
      rateControl:
          type: linear-rate
          opts:
            startingTps: 60
            finishingTps: 60
      workload:
        module: benchmarks/samples/fabric/fabcar/changeCarOwner.js
        arguments:
          assets: 500
monitors:
    resource:
    - module: prometheus
      options:
        url: "http://localhost:9090"
        metrics:
          include: [dev-.*, couch, orderer, {}]
          queries:
          - name: Network traffic (messages)
            query: grpc_server_stream_messages_received{job=~"orderer.*"}
            step: 1
            label: instance
            statistic: sum